"""
Django settings for group_project project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/

Authors: Conor Bernard Rogers, Tomas Premoli

"""

import os
from pathlib import Path
import datetime as dt
from pickle import TRUE
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vwg%snc#1k1rt2pi_6=k2%xvi(w2bbbmd3uwez-$#&dscpxl#)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# These variables are settings variables for modifying aspects of the application
# Email extension:
EMAIL_EXTENSION = "exeter.ac.uk"

# Map settings
MAX_SOUTH = 50.729748
MAX_NORTH = 50.741780
MAX_EAST = -3.520532
MAX_WEST = -3.548116

MIN_ZOOM = 15
MAX_ZOOM = 19

# How close you have to be to complete a challenge
CHALLENGE_VALIDITY_DISTANCE = 0.001

# Should be in hex format
BOUNDING_BOX_COLOR = '#ff2600'
DRAW_BOUNDING_BOX = 'true'

# Photo settings
RESPONSE_PHOTO_SIZE = (750,500)
RESPONSE_PHOTO_QUALITY = 95

PROFILE_PIC_SIZE = (150, 150)
PROFILE_PIC_QUALITY = 90

# These settings are available within templates
SETTINGS_EXPORT = [
    'EMAIL_EXTENSION',
    'MAX_SOUTH',
    'MAX_NORTH',
    'MAX_WEST',
    'MAX_EAST',
    'MIN_ZOOM',
    'MAX_ZOOM',
    'DRAW_BOUNDING_BOX',
    'BOUNDING_BOX_COLOR',
    'CHALLENGE_VALIDITY_DISTANCE',
    'RESPONSE_PHOTO_SIZE',
    'RESPONSE_PHOTO_QUALITY',
    'PROFILE_PIC_SIZE',
    'PROFILE_PIC_QUALITY',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'base.apps.BaseConfig',
    'axes',
    'crispy_forms'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'axes.middleware.AxesMiddleware',
]

ROOT_URLCONF = 'UniExplore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django_settings_export.settings_export',
            ],
        },
    },
]

WSGI_APPLICATION = 'UniExplore.wsgi.application'

# SMTP Settings:
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'exeterteam25@gmail.com'
EMAIL_HOST_PASSWORD = config('gmail_password')


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    # AxesBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
    'axes.backends.AxesBackend',

    # Django ModelBackend is the default authentication backend.
    'django.contrib.auth.backends.ModelBackend',
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# AXES settings:
AXES_FAILURE_LIMIT = 3  # Set the limit to 5 failed attempts
AXES_COOLOFF_TIME = dt.timedelta(minutes=5)  # Lock user out for 5 minutes
AXES_RESET_ON_SUCCESS = True  # If True, a successful login will reset the number of failed logins.
# If True, only lock based on username, and never lock based on IP if attempts exceed the limit.
AXES_LOCK_OUT_BY_COMBINATION_USER_AND_IP = True

# Redirect user to home page when locked out
AXES_LOCKOUT_URL = '../'

# Run lock out function in base/views
AXES_LOCKOUT_CALLABLE = 'base.views.lockout'
